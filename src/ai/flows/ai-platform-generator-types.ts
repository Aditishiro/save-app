// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Defines the data structures (schemas and types) for the AI Platform Generator flow.
 *
 * - GeneratePlatformFromPromptInputSchema: Zod schema for the input.
 * - GeneratePlatformFromPromptInput: TypeScript type for the input.
 * - GeneratePlatformFromPromptOutputSchema: Zod schema for the output.
 * - GeneratePlatformFromPromptOutput: TypeScript type for the output.
 */

import { z } from 'genkit';

export const GeneratePlatformFromPromptInputSchema = z.object({
  prompt: z.string().describe("The user's request describing the platform they want to build."),
});
export type GeneratePlatformFromPromptInput = z.infer<typeof GeneratePlatformFromPromptInputSchema>;

export const GeneratePlatformFromPromptOutputSchema = z.object({
  platformName: z.string().describe("A suitable name for the generated platform."),
  platformDescription: z.string().describe("A brief description of the platform's purpose."),
  platformPurpose: z.string().describe("The primary purpose or category of the platform (e.g., 'Online Banking Portal', 'Loan Origination System')."),
  layouts: z.array(z.object({
      id: z.string().describe("A unique, descriptive ID for the layout (e.g., 'dashboard', 'profileSettings')."),
      name: z.string().describe("A user-friendly name for the layout (e.g., 'Main Dashboard', 'Profile Settings')."),
      componentInstances: z.array(z.object({
        id: z.string().describe("A unique ID for this component instance."),
        definitionId: z.string().describe("The ID of the global component definition to use."),
        type: z.string().describe("The type of the component, denormalized from the definition."),
        configuredValues: z.record(z.any()).describe("An object of key-value pairs for the component's configurable properties."),
        order: z.number().describe("The display order of the component within the layout, starting from 0.")
      })).describe("The list of component instances for this layout.")
  })).describe("An array of layouts for the platform.")
});
export type GeneratePlatformFromPromptOutput = z.infer<typeof GeneratePlatformFromPromptOutputSchema>;
