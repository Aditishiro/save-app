// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI-powered tool that analyzes a form configuration and suggests improvements, including potential redesigns.
 *
 * - optimizeFormWithAI - A function that handles the form optimization process.
 * - OptimizeFormWithAIInput - The input type for the optimizeFormWithAI function.
 * - OptimizeFormWithAIOutput - The return type for the optimizeFormWithAI function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeFormWithAIInputSchema = z.object({
  formConfiguration: z
    .string()
    .describe('The JSON configuration of the form to be analyzed.'),
  intendedUseCase: z
    .string()
    .describe('The intended use case of the form, including any known complex problems or future needs (e.g., loan application needing scalability, onboarding form requiring compliance updates).'),
  researchDocumentDataUri: z
    .string()
    .optional()
    .describe(
      "An optional research document (e.g., PDF, TXT) to inform suggestions, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type OptimizeFormWithAIInput = z.infer<typeof OptimizeFormWithAIInputSchema>;

const OptimizeFormWithAIOutputSchema = z.object({
  suggestions: z
    .string()
    .describe(
      'A list of suggestions for improving the form configuration, including field layout, data validation rules, and components derived from the research document if provided.'
    ),
  reasoning: z
    .string()
    .describe('Explanation of why the suggested changes will improve the form, referencing the research document where applicable.'),
  redesignSuggestions: z
    .string()
    .optional()
    .describe(
      'Suggestions for redesigning specific components or the overall form structure to address complex problems or future needs identified in the use case or research document.'
    ),
});
export type OptimizeFormWithAIOutput = z.infer<typeof OptimizeFormWithAIOutputSchema>;

export async function optimizeFormWithAI(input: OptimizeFormWithAIInput): Promise<OptimizeFormWithAIOutput> {
  return optimizeFormWithAIFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeFormPrompt',
  input: {schema: OptimizeFormWithAIInputSchema},
  output: {schema: OptimizeFormWithAIOutputSchema},
  prompt: `You are an AI-powered form optimization and design expert. Your goal is to analyze a given form configuration, its intended use case (including complex problems or future needs), and an optional research document to provide suggestions for improvement and potential redesigns.

Form Configuration:
{{{formConfiguration}}}

Intended Use Case (Consider any complex problems or future needs mentioned here):
{{{intendedUseCase}}}

{{#if researchDocumentDataUri}}
Additionally, analyze the following research document for insights:
{{media url=researchDocumentDataUri}}

Based on this document, suggest relevant form components, fields, and potential improvisations that align with the insights from the document, the form configuration, and the intended use case of the form.
{{/if}}

Based on all the information provided:
1.  **Provide specific, actionable suggestions** for improving the existing form configuration. Focus on:
    *   Field layout and ordering.
    *   Data validation rules.
    *   Relevant components/fields derived from the research document (if provided).
    *   Potential errors or inconsistencies.
    *   Enhancements to user experience.
2.  **Analyze for complex problems or future needs** mentioned in the use case or implied by the research document (e.g., scalability, compliance, complex workflows).
3.  **If necessary, propose redesign suggestions** for specific components or the overall form structure to address these complex problems or future needs. Describe the proposed redesign and how it solves the identified issue or prepares the form for future requirements. Populate the 'redesignSuggestions' field if you propose a redesign.
4.  **Explain the reasoning** behind all suggestions (both standard improvements and redesigns). Be clear about why the suggested change will improve the form, how it addresses specific problems or future needs, and how it will benefit the user or the process. Reference the research document where applicable.

Format your response according to the output schema, ensuring all relevant fields (suggestions, reasoning, redesignSuggestions) are populated appropriately.
  `,
});

const optimizeFormWithAIFlow = ai.defineFlow(
  {
    name: 'optimizeFormWithAIFlow',
    inputSchema: OptimizeFormWithAIInputSchema,
    outputSchema: OptimizeFormWithAIOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
