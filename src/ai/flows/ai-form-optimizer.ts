// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI-powered tool that analyzes a form configuration and suggests improvements.
 *
 * - optimizeFormWithAI - A function that handles the form optimization process.
 * - OptimizeFormWithAIInput - The input type for the optimizeFormWithAI function.
 * - OptimizeFormWithAIOutput - The return type for the optimizeFormWithAI function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeFormWithAIInputSchema = z.object({
  formConfiguration: z
    .string()
    .describe('The JSON configuration of the form to be analyzed.'),
  intendedUseCase: z
    .string()
    .describe('The intended use case of the form (e.g., loan application, customer onboarding).'),
  researchDocumentDataUri: z
    .string()
    .optional()
    .describe(
      "An optional research document (e.g., PDF, TXT) to inform suggestions, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type OptimizeFormWithAIInput = z.infer<typeof OptimizeFormWithAIInputSchema>;

const OptimizeFormWithAIOutputSchema = z.object({
  suggestions: z
    .string()
    .describe(
      'A list of suggestions for improving the form configuration, including field layout, data validation rules, and components derived from the research document if provided.'
    ),
  reasoning: z
    .string()
    .describe('Explanation of why the suggested changes will improve the form, referencing the research document where applicable.'),
});
export type OptimizeFormWithAIOutput = z.infer<typeof OptimizeFormWithAIOutputSchema>;

export async function optimizeFormWithAI(input: OptimizeFormWithAIInput): Promise<OptimizeFormWithAIOutput> {
  return optimizeFormWithAIFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeFormPrompt',
  input: {schema: OptimizeFormWithAIInputSchema},
  output: {schema: OptimizeFormWithAIOutputSchema},
  prompt: `You are an AI-powered form optimization expert. Your goal is to analyze a given form configuration, an intended use case, and an optional research document to provide suggestions for improvement.

Form Configuration:
{{{formConfiguration}}}

Intended Use Case:
{{{intendedUseCase}}}

{{#if researchDocumentDataUri}}
Additionally, analyze the following research document:
{{media url=researchDocumentDataUri}}

Based on this document, suggest relevant form components, fields, and potential improvisations that align with the insights from the document, the form configuration, and the intended use case of the form.
{{/if}}

Based on the information provided (form configuration, intended use case{{#if researchDocumentDataUri}}, and research document{{/if}}), provide specific, actionable suggestions for improving the form. Focus on:
- Field layout and ordering.
- Data validation rules.
- Relevant components/fields derived from the research document (if provided).
- Potential errors or inconsistencies.
- Enhancements to user experience.

Explain the reasoning behind each suggestion. Be clear about why the suggested change will improve the form and how it will benefit the user. If a suggestion is derived from the research document, please reference it in your reasoning.

Format your response as a list of suggestions, with each suggestion followed by its reasoning.
  `,
});

const optimizeFormWithAIFlow = ai.defineFlow(
  {
    name: 'optimizeFormWithAIFlow',
    inputSchema: OptimizeFormWithAIInputSchema,
    outputSchema: OptimizeFormWithAIOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
