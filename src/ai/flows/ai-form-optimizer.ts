// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI-powered tool that analyzes a form configuration and suggests improvements.
 *
 * - optimizeFormWithAI - A function that handles the form optimization process.
 * - OptimizeFormWithAIInput - The input type for the optimizeFormWithAI function.
 * - OptimizeFormWithAIOutput - The return type for the optimizeFormWithAI function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeFormWithAIInputSchema = z.object({
  formConfiguration: z
    .string()
    .describe('The JSON configuration of the form to be analyzed.'),
  intendedUseCase: z
    .string()
    .describe('The intended use case of the form (e.g., loan application, customer onboarding).'),
});
export type OptimizeFormWithAIInput = z.infer<typeof OptimizeFormWithAIInputSchema>;

const OptimizeFormWithAIOutputSchema = z.object({
  suggestions: z
    .string()
    .describe(
      'A list of suggestions for improving the form configuration, including field layout and data validation rules.'
    ),
  reasoning: z
    .string()
    .describe('Explanation of why the suggested changes will improve the form.'),
});
export type OptimizeFormWithAIOutput = z.infer<typeof OptimizeFormWithAIOutputSchema>;

export async function optimizeFormWithAI(input: OptimizeFormWithAIInput): Promise<OptimizeFormWithAIOutput> {
  return optimizeFormWithAIFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeFormPrompt',
  input: {schema: OptimizeFormWithAIInputSchema},
  output: {schema: OptimizeFormWithAIOutputSchema},
  prompt: `You are an AI-powered form optimization expert. Your goal is to analyze a given form configuration and provide suggestions for improvement.

  Form Configuration:
  {{formConfiguration}}

  Intended Use Case:
  {{intendedUseCase}}

  Based on the form configuration and intended use case, provide specific, actionable suggestions for improving the form. Focus on field layout, data validation rules, and any potential errors or inconsistencies.

  Explain the reasoning behind each suggestion. Be clear about why the suggested change will improve the form and how it will benefit the user.

  Format your response as a list of suggestions, with each suggestion followed by its reasoning.
  `,
});

const optimizeFormWithAIFlow = ai.defineFlow(
  {
    name: 'optimizeFormWithAIFlow',
    inputSchema: OptimizeFormWithAIInputSchema,
    outputSchema: OptimizeFormWithAIOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
