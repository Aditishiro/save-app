// This is an autogenerated file from Firebase Studio.
import { z } from 'genkit';

export const OptimizePlatformWithAIInputSchema = z.object({
  platformConfiguration: z
    .string()
    .describe('The JSON configuration or a textual description of the platform to be analyzed (e.g., layouts, component instances, key integrations, user flows).'),
  intendedUseCase: z
    .string()
    .describe('The intended use case or type of the platform (e.g., "E-commerce B2C", "SaaS CRM", "Internal Operations Dashboard"). Include context about target users, core functionalities, and future scalability needs.'),
});
export type OptimizePlatformWithAIInput = z.infer<typeof OptimizePlatformWithAIInputSchema>;

export const OptimizePlatformWithAIOutputSchema = z.object({
  architecturalSuggestions: z
    .string()
    .describe(
      'Suggestions for improving the platform architecture, including layout choices, component modularity, data flow, and technology stack considerations.'
    ),
  componentSuggestions: z
    .string()
    .describe(
      'Recommendations for specific UI components, their configurations, or alternative components that might better suit the use case or improve UX/performance.'
    ),
  performanceOptimizations: z
    .string()
    .describe(
      'Suggestions for optimizing platform performance, such as data loading strategies, caching, or efficient component rendering.'
    ),
  scalabilityEnhancements: z
    .string()
    .describe(
      'Recommendations for enhancing platform scalability to handle future growth in users or data.'
    ),
  redesignIdeas: z
    .string()
    .optional()
    .describe(
      'Conceptual redesign ideas for specific parts of the platform or the overall user experience to address complex problems or future needs based on the use case and best practices.'
    ),
  reasoning: z
    .string()
    .describe('Explanation of why the suggested changes will improve the platform, referencing best practices where applicable.'),
});
export type OptimizePlatformWithAIOutput = z.infer<typeof OptimizePlatformWithAIOutputSchema>;
